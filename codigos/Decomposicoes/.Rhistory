modelo = tryCatch({Arima(desemprego_brasil,order = c(p, 1, q), seasonal = c(1,0,0)) }, error  = function(e){
warning(e)
return(NULL)
})
if(!is.null(modelo))
{
if(p > 0)
{
if(T %in% (abs(polyroot(c(1,-1*modelo$model$phi))) <= 1))
estacionario = "Não é estacionário" else
estacionario = "É estacionário"
} else estacionario = "Não se aplica"
if(q > 0)
{
if(T %in% (abs(polyroot(c(1,modelo$model$theta))) <= 1))
invertivel = "Não é invertível" else
invertivel = "É invertível"
} else invertivel = "Não se aplica"
lb = Box.test(modelo$residuals, lag = 15, type = "Ljung-Box", fitdf = 15-max(15-p+q,1))
linha = data.frame("p"=p, "q"=q, "Não significantes" =
paste(names(modelo$coef)[abs(modelo$coef/sqrt(diag(modelo$var.coef)))<=qnorm(1-signif/2)],
collapse = " ; "),"AIC" = AIC(modelo), "BIC" = BIC(modelo),
"Estacionariedade" = estacionario, "Invertibilidade" = invertivel,
"p-valor LB" = lb$p.value,
"Nobs" = nobs(modelo),
"Converged"= modelo$code==0)
tabela = rbind(tabela, linha)
}
}
q=1
q=0
p=1
sp=1
modelo = tryCatch({Arima(desemprego_brasil,order = c(p, 1, q), seasonal = c(sp,0,0)) }, error  = function(e){
warning(e)
return(NULL)
})
modelo$model$phi
modelo$model$theta
(abs(polyroot(c(1,modelo$model$theta)))
(abs(polyroot(c(1,modelo$model$theta)))
)
p=0
modelo = tryCatch({Arima(desemprego_brasil,order = c(p, 1, q), seasonal = c(sp,0,0)) }, error  = function(e){
warning(e)
return(NULL)
})
(abs(polyroot(c(1,modelo$model$theta)))
polyroot(c(1,-1*modelo$model$phi))
modelo$model$theta
#Olhando para a ACF, vamos testar as mesmas especificações, mas permitindo a inclusão de um AR sazonal
tabela = data.frame()
#Significancia: testar significância dos coeficientes a que nível?
signif = 0.05
for(p in 0:pmax)
for(q in 0:qmax)
for(sp in 0:1)
if(p + q + sp > 0)
{
modelo = tryCatch({Arima(desemprego_brasil,order = c(p, 1, q), seasonal = c(sp,0,0)) }, error  = function(e){
warning(e)
return(NULL)
})
if(!is.null(modelo))
{
if(p + sp > 0)
{
if(T %in% (abs(polyroot(c(1,-1*modelo$model$phi))) <= 1))
estacionario = "Não é estacionário" else
estacionario = "É estacionário"
} else estacionario = "Não se aplica"
if(q > 0)
{
if(T %in% (abs(polyroot(c(1,modelo$model$theta))) <= 1))
invertivel = "Não é invertível" else
invertivel = "É invertível"
} else invertivel = "Não se aplica"
lb = Box.test(modelo$residuals, lag = 15, type = "Ljung-Box", fitdf = 15-max(15-p+q,1))
linha = data.frame("p"=p, "q"=q, "Sp" = sp, "Não significantes" =
paste(names(modelo$coef)[abs(modelo$coef/sqrt(diag(modelo$var.coef)))<=qnorm(1-signif/2)],
collapse = " ; "),"AIC" = AIC(modelo), "BIC" = BIC(modelo),
"Estacionariedade" = estacionario, "Invertibilidade" = invertivel,
"p-valor LB" = lb$p.value,
"Nobs" = nobs(modelo),
"Converged"= modelo$code==0)
tabela = rbind(tabela, linha)
}
}
#Análise de Box-Jenkins
#Fixando pasta com arquivos
setwd("~/Dropbox/Ensino/Applied Econometrics/SeriesdeTempo1/codigos")
#Pacote forecast para métodos de previsão
library(forecast)
#Carregando dados
data = read.csv2("desemprego.csv")
desemprego_brasil = ts(data = data$Desemprego.PNADC., start = c(2012,03), frequency = 12)
acf(as.numeric(diff(desemprego_brasil)),lag.max =40)
pacf(as.numeric(diff(desemprego_brasil)),lag.max=40)
#Vamos considerar pmax = 13 e qmax = 12
#(Também interessante testar modelos com componentes sazonais, embora não faremos isso)
pmax = 13
qmax = 12
tabela = data.frame()
#Significancia: testar significância dos coeficientes a que nível?
signif = 0.05
for(p in 0:pmax)
for(q in 0:qmax)
if(p + q > 0)
{
modelo = tryCatch({Arima(desemprego_brasil,order = c(p, 1, q)) }, error  = function(e){
warning(e)
return(NULL)
})
if(!is.null(modelo))
{
if(p > 0)
{
if(T %in% (abs(polyroot(c(1,-1*modelo$model$phi))) <= 1))
estacionario = "Não é estacionário" else
estacionario = "É estacionário"
} else estacionario = "Não se aplica"
if(q > 0)
{
if(T %in% (abs(polyroot(c(1,modelo$model$theta))) <= 1))
invertivel = "Não é invertível" else
invertivel = "É invertível"
} else invertivel = "Não se aplica"
lb = Box.test(modelo$residuals, lag = 15, type = "Ljung-Box", fitdf = 15-max(15-p+q,1))
linha = data.frame("p"=p, "q"=q, "Não significantes" =
paste(names(modelo$coef)[abs(modelo$coef/sqrt(diag(modelo$var.coef)))<=qnorm(1-signif/2)],
collapse = " ; "),"AIC" = AIC(modelo), "BIC" = BIC(modelo),
"Estacionariedade" = estacionario, "Invertibilidade" = invertivel,
"p-valor LB" = lb$p.value,
"Nobs" = nobs(modelo),
"Converged"= modelo$code==0)
tabela = rbind(tabela, linha)
}
}
warnings()
#Restringindo a modelos que convergiram
tabela = tabela[tabela$Converged,]
#Analisando a tabela, ARIMA(2,1,8) parece bom
#Vamos rodar o modelo final
modelo = Arima(desemprego_brasil, c(2,1,8))
summary(modelo)
#Mais um check nos resíduos
checkresiduals(modelo)
#Modelagem sazonal talvez ajude
#Vamos fazer o forecast, 12 horizontes à frente
forecast(modelo, 12)
plot(forecast(modelo,12))
#Olhando para a ACF, vamos testar as mesmas especificações, mas permitindo a inclusão de um AR sazonal
#Significancia: testar significância dos coeficientes a que nível?
signif = 0.05
for(p in 0:pmax)
for(q in 0:qmax)
for(sp in 1)
if(p + q + sp > 0)
{
modelo = tryCatch({Arima(desemprego_brasil,order = c(p, 1, q), seasonal = c(sp,0,0)) }, error  = function(e){
warning(e)
return(NULL)
})
if(!is.null(modelo))
{
if(p + sp > 0)
{
if(T %in% (abs(polyroot(c(1,-1*modelo$model$phi))) <= 1))
estacionario = "Não é estacionário" else
estacionario = "É estacionário"
} else estacionario = "Não se aplica"
if(q > 0)
{
if(T %in% (abs(polyroot(c(1,modelo$model$theta))) <= 1))
invertivel = "Não é invertível" else
invertivel = "É invertível"
} else invertivel = "Não se aplica"
lb = Box.test(modelo$residuals, lag = 15, type = "Ljung-Box", fitdf = 15-max(15-p+q,1))
linha = data.frame("p"=p, "q"=q, "Sp" = sp, "Não significantes" =
paste(names(modelo$coef)[abs(modelo$coef/sqrt(diag(modelo$var.coef)))<=qnorm(1-signif/2)],
collapse = " ; "),"AIC" = AIC(modelo), "BIC" = BIC(modelo),
"Estacionariedade" = estacionario, "Invertibilidade" = invertivel,
"p-valor LB" = lb$p.value,
"Nobs" = nobs(modelo),
"Converged"= modelo$code==0)
tabela = rbind(tabela, linha)
}
}
#Olhando para a ACF, vamos testar as mesmas especificações, mas permitindo a inclusão de um AR sazonal
tabela = data.frame()
#Significancia: testar significância dos coeficientes a que nível?
signif = 0.05
for(p in 0:pmax)
for(q in 0:qmax)
for(sp in 1)
if(p + q + sp > 0)
{
modelo = tryCatch({Arima(desemprego_brasil,order = c(p, 1, q), seasonal = c(sp,0,0)) }, error  = function(e){
warning(e)
return(NULL)
})
if(!is.null(modelo))
{
if(p + sp > 0)
{
if(T %in% (abs(polyroot(c(1,-1*modelo$model$phi))) <= 1))
estacionario = "Não é estacionário" else
estacionario = "É estacionário"
} else estacionario = "Não se aplica"
if(q > 0)
{
if(T %in% (abs(polyroot(c(1,modelo$model$theta))) <= 1))
invertivel = "Não é invertível" else
invertivel = "É invertível"
} else invertivel = "Não se aplica"
lb = Box.test(modelo$residuals, lag = 15, type = "Ljung-Box", fitdf = 15-max(15-p+q,1))
linha = data.frame("p"=p, "q"=q, "Sp" = sp, "Não significantes" =
paste(names(modelo$coef)[abs(modelo$coef/sqrt(diag(modelo$var.coef)))<=qnorm(1-signif/2)],
collapse = " ; "),"AIC" = AIC(modelo), "BIC" = BIC(modelo),
"Estacionariedade" = estacionario, "Invertibilidade" = invertivel,
"p-valor LB" = lb$p.value,
"Nobs" = nobs(modelo),
"Converged"= modelo$code==0)
tabela = rbind(tabela, linha)
}
}
#Olhando para a ACF, vamos testar as mesmas especificações, mas permitindo a inclusão de um AR sazonal
tabela = data.frame()
#Significancia: testar significância dos coeficientes a que nível?
signif = 0.05
for(p in 0:pmax)
for(q in 0:qmax)
for(sp in 0:1)
if(p + q + sp > 0)
{
modelo = tryCatch({Arima(desemprego_brasil,order = c(p, 1, q), seasonal = c(sp,0,0)) }, error  = function(e){
warning(e)
return(NULL)
})
if(!is.null(modelo))
{
if(p + sp > 0)
{
if(T %in% (abs(polyroot(c(1,-1*modelo$model$phi))) <= 1))
estacionario = "Não é estacionário" else
estacionario = "É estacionário"
} else estacionario = "Não se aplica"
if(q > 0)
{
if(T %in% (abs(polyroot(c(1,modelo$model$theta))) <= 1))
invertivel = "Não é invertível" else
invertivel = "É invertível"
} else invertivel = "Não se aplica"
lb = Box.test(modelo$residuals, lag = 15, type = "Ljung-Box", fitdf = 15-max(15-p+q,1))
linha = data.frame("p"=p, "q"=q, "Sp" = sp, "Não significantes" =
paste(names(modelo$coef)[abs(modelo$coef/sqrt(diag(modelo$var.coef)))<=qnorm(1-signif/2)],
collapse = " ; "),"AIC" = AIC(modelo), "BIC" = BIC(modelo),
"Estacionariedade" = estacionario, "Invertibilidade" = invertivel,
"p-valor LB" = lb$p.value,
"Nobs" = nobs(modelo),
"Converged"= modelo$code==0)
tabela = rbind(tabela, linha)
}
}
tabela = tabela[tabela$Converged,]
View(tabela)
View(tabela)
help(arima)
modelo = Arima(desemprego_brasil, order = c(1,1,0), seasonal = c(1,0,0))
summary(modelo)
checkresiduals(modelo)
plot(forecast(modelo, 12))
View(modelo)
View(tabela)
View(modelo)
View(tabela)
View(modelo)
View(tabela)
View(tabela)
#Olhando para a ACF, vamos testar as mesmas especificações, mas permitindo a inclusão de um AR sazonal até a ordem máxima 2
spmax = 2
tabela = data.frame()
#Significancia: testar significância dos coeficientes a que nível?
signif = 0.05
for(p in 0:pmax)
for(q in 0:qmax)
for(sp in 0:spmax)
if(p + q + sp > 0)
{
modelo = tryCatch({Arima(desemprego_brasil,order = c(p, 1, q), seasonal = c(sp,0,0)) }, error  = function(e){
warning(e)
return(NULL)
})
if(!is.null(modelo))
{
if(p + sp > 0)
{
if(T %in% (abs(polyroot(c(1,-1*modelo$model$phi))) <= 1))
estacionario = "Não é estacionário" else
estacionario = "É estacionário"
} else estacionario = "Não se aplica"
if(q > 0)
{
if(T %in% (abs(polyroot(c(1,modelo$model$theta))) <= 1))
invertivel = "Não é invertível" else
invertivel = "É invertível"
} else invertivel = "Não se aplica"
lb = Box.test(modelo$residuals, lag = 15, type = "Ljung-Box", fitdf = 15-max(15-p+q,1))
linha = data.frame("p"=p, "q"=q, "Sp" = sp, "Não significantes" =
paste(names(modelo$coef)[abs(modelo$coef/sqrt(diag(modelo$var.coef)))<=qnorm(1-signif/2)],
collapse = " ; "),"AIC" = AIC(modelo), "BIC" = BIC(modelo),
"Estacionariedade" = estacionario, "Invertibilidade" = invertivel,
"p-valor LB" = lb$p.value,
"Nobs" = nobs(modelo),
"Converged"= modelo$code==0)
tabela = rbind(tabela, linha)
}
}
tabela = tabela[tabela$Converged,]
#ARIMA(1,1,0)(1,0,0) parece uma excelente aproximação aos dados, vamos rodar:
modelo = Arima(desemprego_brasil, order = c(1,1,0), seasonal = c(1,0,0))
summary(modelo)
checkresiduals(modelo)
plot(forecast(modelo, 12))
View(tabela)
modelo = Arima(desemprego_brasil, order = c(1,1,0), seasonal = c(2,0,0))
summary(modelo)
checkresiduals(modelo)
View(tabela)
plot(forecast(modelo, 12))
rm(list=ls())
#Análise de Box-Jenkins
#Fixando pasta com arquivos
setwd("~/Dropbox/Ensino/Applied Econometrics/SeriesdeTempo1/codigos")
#Pacote forecast para métodos de previsão
library(forecast)
#Carregando dados
data = read.csv2("desemprego.csv")
desemprego_brasil = ts(data = data$Desemprego.PNADC., start = c(2012,03), frequency = 12)
acf(as.numeric(diff(desemprego_brasil)),lag.max =40)
pacf(as.numeric(diff(desemprego_brasil)),lag.max=40)
#Restringindo a modelos que convergiram
tabela = tabela[tabela$Converged,]
#Analisando a tabela, ARIMA(2,1,8) parece bom
#Vamos rodar o modelo final
modelo = Arima(desemprego_brasil, c(2,1,8))
summary(modelo)
#Mais um check nos resíduos
checkresiduals(modelo)
#Modelagem sazonal talvez ajude
#Vamos fazer o forecast, 12 horizontes à frente
forecast(modelo, 12)
plot(forecast(modelo,12))
#Olhando para a ACF, vamos testar as mesmas especificações, mas permitindo a inclusão de um AR sazonal até a ordem máxima 2
spmax = 2
#Essa parte do código vai demorar
tabela = data.frame()
#Significancia: testar significância dos coeficientes a que nível?
signif = 0.05
for(p in 0:pmax)
for(q in 0:qmax)
for(sp in 0:spmax)
if(p + q + sp > 0)
{
modelo = tryCatch({Arima(desemprego_brasil,order = c(p, 1, q), seasonal = c(sp,0,0)) }, error  = function(e){
warning(e)
return(NULL)
})
if(!is.null(modelo))
{
if(p + sp > 0)
{
if(T %in% (abs(polyroot(c(1,-1*modelo$model$phi))) <= 1))
estacionario = "Não é estacionário" else
estacionario = "É estacionário"
} else estacionario = "Não se aplica"
if(q > 0)
{
if(T %in% (abs(polyroot(c(1,modelo$model$theta))) <= 1))
invertivel = "Não é invertível" else
invertivel = "É invertível"
} else invertivel = "Não se aplica"
lb = Box.test(modelo$residuals, lag = 15, type = "Ljung-Box", fitdf = 15-max(15-p+q,1))
linha = data.frame("p"=p, "q"=q, "Sp" = sp, "Não significantes" =
paste(names(modelo$coef)[abs(modelo$coef/sqrt(diag(modelo$var.coef)))<=qnorm(1-signif/2)],
collapse = " ; "),"AIC" = AIC(modelo), "BIC" = BIC(modelo),
"Estacionariedade" = estacionario, "Invertibilidade" = invertivel,
"p-valor LB" = lb$p.value,
"Nobs" = nobs(modelo),
"Converged"= modelo$code==0)
tabela = rbind(tabela, linha)
}
}
tabela = tabela[tabela$Converged,]
#Análise de Box-Jenkins
#Fixando pasta com arquivos
setwd("~/Dropbox/Ensino/Applied Econometrics/SeriesdeTempo1/codigos")
#Pacote forecast para métodos de previsão
library(forecast)
#Carregando dados
data = read.csv2("desemprego.csv")
desemprego_brasil = ts(data = data$Desemprego.PNADC., start = c(2012,03), frequency = 12)
acf(as.numeric(diff(desemprego_brasil)),lag.max =40)
pacf(as.numeric(diff(desemprego_brasil)),lag.max=40)
#Vamos considerar pmax = 13 e qmax = 12
#(Também interessante testar modelos com componentes sazonais, como veremos mais à frente)
pmax = 13
qmax = 12
tabela = data.frame()
#Olhando para a ACF, vamos testar as mesmas especificações, mas permitindo a inclusão de um AR sazonal até a ordem máxima 2
spmax = 2
#Essa parte do código vai demorar
tabela = data.frame()
#Significancia: testar significância dos coeficientes a que nível?
signif = 0.05
for(p in 0:pmax)
for(q in 0:qmax)
for(sp in 0:spmax)
if(p + q + sp > 0)
{
modelo = tryCatch({Arima(desemprego_brasil,order = c(p, 1, q), seasonal = c(sp,0,0)) }, error  = function(e){
warning(e)
return(NULL)
})
if(!is.null(modelo))
{
if(p + sp > 0)
{
if(T %in% (abs(polyroot(c(1,-1*modelo$model$phi))) <= 1))
estacionario = "Não é estacionário" else
estacionario = "É estacionário"
} else estacionario = "Não se aplica"
if(q > 0)
{
if(T %in% (abs(polyroot(c(1,modelo$model$theta))) <= 1))
invertivel = "Não é invertível" else
invertivel = "É invertível"
} else invertivel = "Não se aplica"
lb = Box.test(modelo$residuals, lag = 15, type = "Ljung-Box", fitdf = 15-max(15-p+q,1))
linha = data.frame("p"=p, "q"=q, "Sp" = sp, "Não significantes" =
paste(names(modelo$coef)[abs(modelo$coef/sqrt(diag(modelo$var.coef)))<=qnorm(1-signif/2)],
collapse = " ; "),"AIC" = AIC(modelo), "BIC" = BIC(modelo),
"Estacionariedade" = estacionario, "Invertibilidade" = invertivel,
"p-valor LB" = lb$p.value,
"Nobs" = nobs(modelo),
"Converged"= modelo$code==0)
tabela = rbind(tabela, linha)
}
}
tabela = tabela[tabela$Converged,]
#ARIMA(1,1,0)(2,0,0) parece uma excelente aproximação aos dados, vamos rodar:
modelo = Arima(desemprego_brasil, order = c(1,1,0), seasonal = c(2,0,0))
summary(modelo)
checkresiduals(modelo)
View(tabela)
View(modelo)
View(tabela)
modelo = Arima(desemprego_brasil, order = c(1,1,0), seasonal = c(2,0,0))
summary(modelo)
checkresiduals(modelo)
plot(forecast(modelo, 12))
modelo = Arima(desemprego_brasil, c(2,1,8))
plot(forecast(modelo,12))
#Decompondo séries de tempo
#Fixando pasta com arquivos
setwd("~/Documentos/GitHub/Econometria-III/codigos/Decomposicoes/")
#Decompondo séries de tempo
#Fixando pasta com arquivos
setwd("~/GitHub/Econometria-III/codigos/Decomposicoes/")
setwd("/Users/luisalvarez/Documents/GitHub/Econometria-III/codigos/Decomposicoes/")
#Decompondo séries de tempo
#Fixando pasta com arquivos
setwd("/Users/luisalvarez/Documents/GitHub/Econometria-III/codigos/Decomposicoes/")
#Carregando pacotes necessários. Instale-os se não os possuir
library("seasonal") #Arima X13-Seats
library("mFilter") #Filtro HP
data = read.csv2("desemprego.csv")
desemprego_brasil = ts(data = data$Desemprego.PNADC., start = c(2012,03), frequency = 12)
plot(desemprego_brasil) #Série em nível
plot(diff(desemprego_brasil)) #Gráfico da primeira diferença: modelo aditivo parece razoável
#1. Ajuste de média móvel
decomposicao = decompose(desemprego_brasil, type = "additive")
desemprego_ajustado_cma = desemprego_brasil - decomposicao$seasonal
plot(desemprego_brasil)
lines(desemprego_ajustado_cma, col = 'blue')
#2. Ajuste via ARIMA X13-Seats
modelo_sazonal = seas(desemprego_brasil)
plot(modelo_sazonal)
desemprego_x13 = predict(modelo_sazonal)
#Filtro HP
filtrado = hpfilter(desemprego_x13,129600,type = "lambda")
plot(desemprego_x13, col='red')
lines(filtrado$trend,col='blue')
#Exemplificando viés de ponta com dados mais recentes
data = read.csv("desemprego_atualizado.csv")
desemp_atualizado = ts(data$Desemprego.PNADC., start = c(2012,03), frequency = 12)
desemp_x13 = predict(seas(desemp_atualizado))
desemp_menor = window(desemp_x13, end = c(2021,12))
filtrado_menor =  hpfilter(desemp_menor,129600,type = "lambda")$trend
filtrado_cheio =  hpfilter(desemp_x13,129600,type = "lambda")$trend
plot(desemp_x13)
lines(filtrado_menor, col = 'red')
lines(filtrado_cheio, col = 'blue')
legend('topleft', c('Tendência HP (estimação até dez/2021)', 'Tendência HP (estimação até jan/2024)'),
col = c('red','blue'),lty = c(1,1), cex = 0.7)
#Proposta de Hamilton
base = cbind(desemp_x13,do.call(cbind, lapply(-24-0:3, function(x) lag(desemp_x13, x))))
colnames(base) = c('desemp', paste('L',0:3,sep=''))
model = lm(desemp~., data = base)
base = cbind(base, 'hamilton_cycle' =base[,1]- predict(model, base))
plot(base[,"hamilton_cycle"], col = 'blue')
abline(h=0)
