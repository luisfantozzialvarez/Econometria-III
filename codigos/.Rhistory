tabla$upper_ci = tabla$est + critical*tabla$se
return(list('table' =tabla, 'vcov' = mod_conley))
}
#EXAMPLE
set.seed(123)
#Fake example using CS's dataset
data(mpdta)
#I'll create a fake latlong for each unit in this dataset
geo = data.frame("id" = unique(mpdta$countyreal), "lat" = runif(length(unique(mpdta$countyreal)),-90,90),
"lon" = runif(length(unique(mpdta$countyreal)),-180,180))
#Running
results = cs_conley_att(yname = "lemp",gname= "first.treat", idname="countyreal", tname="year", xformla = ~1,data = mpdta, est_method = "reg",
geo = geo)
results
library(did)
library(fixest)
library(Matrix)
#Computes DID parameters using Conley variance-covariance estimator
#First seven parameters correspond to Callaway and Santanna's original estimator
#Eigth parameter should be a (number of panel units) x 3 dataset, where the first column is the unit identifier,
#second column is the latitude and third column is the longitude
cs_conley_att <- function(yname, gname, idname, tname, xformla, data, est_method, geo,
confidence = 0.95)
{
data = data[order(data[,idname]),]
geo = geo[order(geo[,1]),]
out <- att_gt(yname = yname,
gname = gname,
idname = idname,
tname = tname,
xformla = xformla,
data = data,
est_method = est_method,
bstrap =F
)
out <- aggte(out, type = 'simple', bstrap = F)
#return(out)
#Grabbing influence function
if_func = as.matrix(out$inf.func[[1]])
print(dim(if_func))
data_analysis = data.frame('term' = as.vector(if_func),  'lat' = rep(geo[,2], times = ncol(if_func)), 'lon' =rep(geo[,3], times = ncol(if_func)))
#computing matrix
model = feols(term~1, data_analysis)
mod_conley = vcov_conley(model, lat = 'lat', lon = 'lon')
se = sqrt(diag(mod_conley))
tabla = data.frame( 'est' = out$overall.att, 'se' = se)
rownames(tabla) = NULL
critical = qnorm(1-(1-confidence)/2)
tabla$lower_ci = tabla$est - critical*tabla$se
tabla$upper_ci = tabla$est + critical*tabla$se
return(list('table' =tabla, 'vcov' = mod_conley))
}
#EXAMPLE
set.seed(123)
#Fake example using CS's dataset
data(mpdta)
#I'll create a fake latlong for each unit in this dataset
geo = data.frame("id" = unique(mpdta$countyreal), "lat" = runif(length(unique(mpdta$countyreal)),-90,90),
"lon" = runif(length(unique(mpdta$countyreal)),-180,180))
#Running
results = cs_conley_att(yname = "lemp",gname= "first.treat", idname="countyreal", tname="year", xformla = ~1,data = mpdta, est_method = "reg",
geo = geo)
results
# Research question and methodology
help(decompose)
37.8*1.0002
1/4
1/16
ln(2)
log(2)
log())
log(3)
log(4)
log(5)
log(10)
log(10)/10
exp(2)
devtools::install_github("gadenbuie/rsthemes")
install.packages("devtools")
install.packages("devtools")
devtools::install_github("gadenbuie/rsthemes")
rsthemes::install_rsthemes(include_base16 = TRUE)
#Decompondo séries de tempo
#Fixando pasta com arquivos
setwd("~/Documents/GitHub/Econometria-III/codigos/")
#Carregando pacotes necessários. Instale-os se não os possuir
library(forecast) #Pacote forecast para métodos de previsão
library(sandwich) #Erros padrão HAC
library(lmtest) #Testes com erros padrão robustos
#Carregando dados
data = read.csv2("Raiz_Unitaria/divida_liquida.csv")
divida = ts(data = data$Divida.liquida.do.Setor.publico, start = c(2001,12), frequency = 12)
plot(divida)
#Da aula anterior, sabemos que a série apresenta raiz unitária, e de:
trend = 1:(length(divida)-1)
regg = lm(diff(divida)~trend)
coeftest(regg, vcov. = vcovHAC)
#Série não apresenta componentes determinísticos na primeira diferença.
#Dessa forma, estimaremos o ARMA em primeiras diferenças (ARIMA(p,1,q)) sem intercepto ou tendência.
#FAC e FACP do processo estacionarizado (no nosso caso, basta tirar as diferenças,
#pois n há não estacionariedade determinística uma vez que o processo é diferenciado)
acf(diff(divida), lag.max = 40)
pacf(diff(divida), lag.max = 40)
#Da inspeção visual da FAC e FACP, o processo parece ser compatível com MA(2)
#No entanto, FACP, apesar de aparentemente exibir decaimento, poderia ser compatível com um componente
#AR(12)
#Vamos ser conservadores e considerar pmax = 12 e qmax = 2, e calcular todos os modelos:
pmax = 12
qmax = 2
#Vamos usar uma função auxiliar, que incluí no arquivo box_jenkins_parallel.R
source("Box_jenkins/box_jenkins_parallel.R")
tabela = arima.est.parallel(divida, pmax, qmax, d=1, include.constant = F, include.trend = F,
signif = 0.1, lags.lbox = c(20,30))
#Removendo modelos que não convergiram
tabela = tabela[tabela$Converged,]
#MA(2) e ARMA(5,2) parecem razoáveis. Vamos estimá-lo:
modelo = Arima(divida, order =c(0,1,2), include.constant = F, include.drift = F)
summary(modelo)
checkresiduals(modelo)
forecast(modelo)
plot(forecast(modelo))
# ARMA(5,2)
modelo2 = Arima(divida, order =c(5,1,2), include.constant = F, include.drift = F)
summary(modelo2)
checkresiduals(modelo2)
forecast(modelo2)
plot(forecast(modelo2))
# ARMA(5,2)
modelo2 = Arima(divida, order =c(0,0,1), include.constant = F, include.drift = F)
summary(modelo2)
checkresiduals(modelo2)
# ARMA(5,2)
modelo2 = Arima(divida, order =c(2,1,1), include.constant = F, include.drift = F)
summary(modelo2)
checkresiduals(modelo2)
# ARMA(5,2)
modelo2 = Arima(divida, order =c(0,1,1), include.constant = F, include.drift = F)
summary(modelo2)
checkresiduals(modelo2)
resid = rt(1000, 2)
help(jarque.bera)
library(parallel)
jarque.bera.test(resid)
library(parallel)
library(forecast)
jarque.bera.test(resid)
#Decompondo séries de tempo
#Fixando pasta com arquivos
setwd("~/Documents/GitHub/Econometria-III/codigos/")
#Carregando pacotes necessários. Instale-os se não os possuir
library(forecast) #Pacote forecast para métodos de previsão
library(sandwich) #Erros padrão HAC
library(lmtest) #Testes com erros padrão robustos
source("Box_jenkins/box_jenkins_parallel.R")
jarque.bera.test
library(tseries)
jarque.bera.test(resid)
histogram(resid)
histogram(resid)
resid = rt(1000, 2)
histogram(resid)
hist(resid)
resid
mean(rt)
mean(resid)
help(rt)
resid = rt(1000, df=1)
hist(resid)
density(resid)
plot(density(resid))
plot(hist(resid))
min(resid)
resid = rt(1000, df=2)
plot(hist(resid))
resid = rt(1000, df=10)
plot(hist(resid))
resid = rt(1000, df=10)
plot(hist(resid))
resid = rt(1000, df=15)
plot(hist(resid))
plot(hist(resid),density=T)
resid = rt(1000, df=15)
plot(hist(resid,density=T))
resid = rt(1000, df=15)
plot(hist(resid,density=T))
help(rt)
help(curve)
plot(hist(resid,density=T))
curve(function(x) {dnorm(x,mean(resid),sd(resid))}, from = -4, to = 4, add=T)
a<-function(x) dnorm(x,mean(resid),sd(resid))
a(2:10)
curve(function(x) dnorm(x,mean(resid),sd(resid)), from = -4, to = 4, add=T)
seq(-4,4, 0.001)
lines(seq(-4,4, 0.001), dens_n(seq(-4,4, 0.001)))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-4,4, 0.001), dens_n(seq(-4,4, 0.001)))
lines(seq(-4,4, 0.001), dens_n(seq(-4,4, 0.001)))
plot(hist(resid,density = T))
plot(hist(resid,freq = F))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-4,4, 0.001), dens_n(seq(-4,4, 0.001)))
plot(hist(resid,freq = F))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-4,4, 0.001), dens_n(seq(-4,4, 0.001)))
help(hist)
(hist(resid,freq = F))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-4,4, 0.001), dens_n(seq(-4,4, 0.001)))
resid = rt(1000, df=5)
(hist(resid,freq = F))
resid = rt(1000, df=5)
(hist(resid,freq = F))
resid = rt(1000, df=5)
(hist(resid,freq = F))
resid = rt(1000, df=5)
(hist(resid,freq = F))
resid = rt(1000, df=5)
(hist(resid,freq = F))
resid = rt(1000, df=5)
(hist(resid,freq = F))
resid = rt(1000, df=5)
(hist(resid,freq = F))
resid = rt(1000, df=5)
(hist(resid,freq = F))
resid = rt(1000, df=5)
(hist(resid,freq = F))
resid = rt(1000, df=5)
(hist(resid,freq = F))
resid = rt(1000, df=5)
(hist(resid,freq = F))
resid = rt(1000, df=5)
(hist(resid,freq = F))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-4,4, 0.001), dens_n(seq(-4,4, 0.001)))
resid = rt(1000, df=8)
(hist(resid,freq = F))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-4,4, 0.001), dens_n(seq(-4,4, 0.001)))
resid = rt(1000, df=8)
(hist(resid,freq = F))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-4,4, 0.001), dens_n(seq(-4,4, 0.001)))
resid = rt(1000, df=8)
(hist(resid,freq = F))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-4,4, 0.001), dens_n(seq(-4,4, 0.001)))
resid = rt(1000, df=8)
(hist(resid,freq = F))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-4,4, 0.001), dens_n(seq(-4,4, 0.001)))
resid = rt(1000, df=8)
(hist(resid,freq = F))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-4,4, 0.001), dens_n(seq(-4,4, 0.001)))
resid = rt(1000, df=8)
(hist(resid,freq = F))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-4,4, 0.001), dens_n(seq(-4,4, 0.001)))
resid = rt(1000, df=8)
(hist(resid,freq = F))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-4,4, 0.001), dens_n(seq(-4,4, 0.001)))
resid = rt(10000, df=8)
(hist(resid,freq = F))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-4,4, 0.001), dens_n(seq(-4,4, 0.001)))
resid = rt(10000, df=5)
(hist(resid,freq = F))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-4,4, 0.001), dens_n(seq(-4,4, 0.001)))
resid = rt(10000, df=5)
(hist(resid,freq = F))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-4,4, 0.001), dens_n(seq(-5,5, 0.001)))
resid = rt(10000, df=5)
(hist(resid,freq = F))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-4,4, 0.001), dens_n(seq(-5,5, 0.001)))
resid = rt(10000, df=5)
(hist(resid,freq = F))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-4,4, 0.001), dens_n(seq(-5,5, 0.001)))
resid = rt(10000, df=5)
(hist(resid,freq = F))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-4,4, 0.001), dens_n(seq(-5,5, 0.001)))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-5,5, 0.001), dens_n(seq(-5,5, 0.001)))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-5,5, 0.001), dens_n(seq(-5,5, 0.001)))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-5,5, 0.001), dens_n(seq(-5,5, 0.001)))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-5,5, 0.001), dens_n(seq(-5,5, 0.001)))
(hist(resid,freq = F))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-5,5, 0.001), dens_n(seq(-5,5, 0.001)))
resid = rt(10000, df=5)
(hist(resid,freq = F))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-5,5, 0.001), dens_n(seq(-5,5, 0.001)))
resid = rt(10000, df=5)
(hist(resid,freq = F))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-5,5, 0.001), dens_n(seq(-5,5, 0.001)))
resid = rt(10000, df=5)
(hist(resid,freq = F))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-5,5, 0.001), dens_n(seq(-5,5, 0.001)))
resid = rt(10000, df=5)
(hist(resid,freq = F))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-5,5, 0.001), dens_n(seq(-5,5, 0.001)))
resid = rt(10000, df=5)
(hist(resid,freq = F))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-5,5, 0.001), dens_n(seq(-5,5, 0.001)))
resid = rt(10000, df=5)
(hist(resid,freq = F))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-5,5, 0.001), dens_n(seq(-5,5, 0.001)))
resid = rt(10000, df=5)
(hist(resid,freq = F))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-5,5, 0.001), dens_n(seq(-5,5, 0.001)))
resid = rt(10000, df=5)
(hist(resid,freq = F))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-5,5, 0.001), dens_n(seq(-5,5, 0.001)))
resid = rt(10000, df=1)
(hist(resid,freq = F))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-5,5, 0.001), dens_n(seq(-5,5, 0.001)))
resid = rt(10000, df=1)
(hist(resid,freq = F))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-5,5, 0.001), dens_n(seq(-5,5, 0.001)))
resid = rt(10000, df=1)
(hist(resid,freq = F))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-5,5, 0.001), dens_n(seq(-5,5, 0.001)))
resid = rt(10000, df=1)
(hist(resid,freq = F))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-5,5, 0.001), dens_n(seq(-5,5, 0.001)))
resid = rt(10000, df=1)
(hist(resid,freq = F))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-5,5, 0.001), dens_n(seq(-5,5, 0.001)))
resid = rt(10000, df=1)
(hist(resid,freq = F))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-5,5, 0.001), dens_n(seq(-5,5, 0.001)))
resid = rt(10000, df=20)
(hist(resid,freq = F))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-5,5, 0.001), dens_n(seq(-5,5, 0.001)))
resid = rt(10000, df=20)
(hist(resid,freq = F))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-5,5, 0.001), dens_n(seq(-5,5, 0.001)))
resid = rt(10000, df=20)
(hist(resid,freq = F))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-5,5, 0.001), dens_n(seq(-5,5, 0.001)))
resid = rt(10000, df=20)
(hist(resid,freq = F))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-5,5, 0.001), dens_n(seq(-5,5, 0.001)))
resid = rt(10000, df=15)
(hist(resid,freq = F))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-5,5, 0.001), dens_n(seq(-5,5, 0.001)))
resid = rt(10000, df=15)
(hist(resid,freq = F))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-5,5, 0.001), dens_n(seq(-5,5, 0.001)))
resid = rt(10000, df=5)
(hist(resid,freq = F))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-5,5, 0.001), dens_n(seq(-5,5, 0.001)))
resid = rt(10000, df=5)
(hist(resid,freq = F))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-5,5, 0.001), dens_n(seq(-5,5, 0.001)))
resid = rt(10000, df=5)
(hist(resid,freq = F))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-5,5, 0.001), dens_n(seq(-5,5, 0.001)))
resid = rt(10000, df=5)
(hist(resid,freq = F))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-5,5, 0.001), dens_n(seq(-5,5, 0.001)))
resid = rt(10000, df=5)
(hist(resid,freq = F))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-5,5, 0.001), dens_n(seq(-5,5, 0.001)))
resid = rt(10000, df=5)
(hist(resid,freq = F))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-5,5, 0.001), dens_n(seq(-5,5, 0.001)))
resid = rt(10000, df=4)
(hist(resid,freq = F))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-5,5, 0.001), dens_n(seq(-5,5, 0.001)))
resid = rt(10000, df=4)
(hist(resid,freq = F))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-5,5, 0.001), dens_n(seq(-5,5, 0.001)))
resid = rt(10000, df=4)
(hist(resid,freq = F))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-5,5, 0.001), dens_n(seq(-5,5, 0.001)))
resid = rt(10000, df=4)
(hist(resid,freq = F))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-5,5, 0.001), dens_n(seq(-5,5, 0.001)))
resid = rt(10000, df=4)
(hist(resid,freq = F))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-5,5, 0.001), dens_n(seq(-5,5, 0.001)))
resid = rt(10000, df=10)
(hist(resid,freq = F))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-5,5, 0.001), dens_n(seq(-5,5, 0.001)))
resid = rt(10000, df=10)
(hist(resid,freq = F))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-5,5, 0.001), dens_n(seq(-5,5, 0.001)))
(hist(resid,freq = F, bin=0.1))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-5,5, 0.001), dens_n(seq(-5,5, 0.001)))
help(hist)
(hist(resid,freq = F,breaks=0.1))
(hist(resid,freq = F,breaks=20))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-5,5, 0.001), dens_n(seq(-5,5, 0.001)))
(hist(resid,freq = F,breaks=30))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-5,5, 0.001), dens_n(seq(-5,5, 0.001)))
resid = rt(10000, df=10)
(hist(resid,freq = F,breaks=30))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-5,5, 0.001), dens_n(seq(-5,5, 0.001)))
resid = rt(10000, df=10)
(hist(resid,freq = F,breaks=30))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-5,5, 0.001), dens_n(seq(-5,5, 0.001)))
resid = rt(10000, df=10)
(hist(resid,freq = F,breaks=30))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-5,5, 0.001), dens_n(seq(-5,5, 0.001)))
jarque.bera.test(resid)
resid = rt(10000, df=8)
(hist(resid,freq = F,breaks=30))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-5,5, 0.001), dens_n(seq(-5,5, 0.001)))
resid = rt(10000, df=8)
(hist(resid,freq = F,breaks=30))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-5,5, 0.001), dens_n(seq(-5,5, 0.001)))
resid = rt(10000, df=8)
(hist(resid,freq = F,breaks=30))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-5,5, 0.001), dens_n(seq(-5,5, 0.001)))
resid = rt(10000, df=8)
(hist(resid,freq = F,breaks=30))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-5,5, 0.001), dens_n(seq(-5,5, 0.001)))
resid = rt(10000, df=8)
(hist(resid,freq = F,breaks=30))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-5,5, 0.001), dens_n(seq(-5,5, 0.001)))
resid = rt(10000, df=8)
(hist(resid,freq = F,breaks=30))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-5,5, 0.001), dens_n(seq(-5,5, 0.001)))
resid = rt(10000, df=8)
(hist(resid,freq = F,breaks=30))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-5,5, 0.001), dens_n(seq(-5,5, 0.001)))
resid = rt(10000, df=8)
(hist(resid,freq = F,breaks=30))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-5,5, 0.001), dens_n(seq(-5,5, 0.001)))
resid = rt(10000, df=8)
(hist(resid,freq = F,breaks=30))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-5,5, 0.001), dens_n(seq(-5,5, 0.001)))
resid = rt(10000, df=8)
(hist(resid,freq = F,breaks=30))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-5,5, 0.001), dens_n(seq(-5,5, 0.001)))
resid = rt(10000, df=8)
(hist(resid,freq = F,breaks=30))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-5,5, 0.001), dens_n(seq(-5,5, 0.001)))
resid = 1/rnorm(10000)
(hist(resid,freq = F,breaks=30))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-5,5, 0.001), dens_n(seq(-5,5, 0.001)))
(hist(resid,freq = F,breaks=30))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-5,5, 0.001), dens_n(seq(-5,5, 0.001)))
(hist(resid,freq = F,breaks=30))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-5,5, 0.001), dens_n(seq(-5,5, 0.001)))
resid = rt(10000, df=8)
(hist(resid,freq = F,breaks=30))
dens_n <- function(x) dnorm(x,mean(resid),sd(resid))
lines(seq(-5,5, 0.001), dens_n(seq(-5,5, 0.001)))
install.packages("GenSA")
